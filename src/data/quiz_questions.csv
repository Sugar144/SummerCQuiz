"Usando la directiva #define, declara una constante para el máximo de drones con el valor entero 10","#define MAX_DRONES 10"
"Declara una constante local de tipo decimal para la distancia mínima, asignale el valor 250.0","const float DISTANCIA_MINIMA = 250.0;"
"Declara una cadena de caracteres llamada nombreDron con tamaño 20.","char nombreDron[20];"
"Declara una variable entera para almacenar el identificador del dron, llamala idDron.","int idDron;"
"Declara una variable decimal para la batería inicial del dron.","float bateriaInicial;"
"Declara una variable booleana llamada dronActivo e inicialízala a true.","bool dronActivo = true;"
"Declara e inicializa una variable char llamada categoriaDron a ""A"".","char categoriaDron = 'A';"
"Lee el nombre del dron desde teclado usando scanf y guardalo en nombreDron.","scanf(""%s"", nombreDron);"
"Lee el identificador del dron desde teclado usando scanf y guardalo en idDron.","scanf(""%d"", &idDron);"
"Lee el valor de la batería inicial desde teclado usando scanf y guárdalo en bateriaInicial.","scanf(""%f"", &bateriaInicial);"
"Lee un carácter del usuario desde teclado usando scanf y guárdalo en categoriaDron.","scanf("" %c"", &categoriaDron);"
"Imprime el nombre del dron y su identificador. Usa ""Dron: , ID: "" para la impresión","printf(""Dron: %s, ID: %d"", nombreDron, idDron);"
"Imprime la batería inicial del dron con un decimal. Usa ""Batería: "" para la impresión","printf(""Batería: %.1f"", bateriaInicial);"
"Imprime la categoría del dron como carácter. Usa ""Categoría:"" para la impresión","printf(""Categoría: %c"", categoriaDron);"
"Declara un enumerado tDronEstado con los valores PARADO, EN_VUELO y ESTRELLADO.","typedef enum { PARADO, EN_VUELO, ESTRELLADO } tDronEstado;"
"Declara una variable tDronEstado llamada estado e inicialízala a EN_VUELO.","tDronEstado estado = EN_VUELO;"
"Lee el valor del estado del dron desde teclado usando scanf y guárdalo en estado.","scanf(""%u"", &estado);"
"Imprime el valor numérico del estado del dron con una explicación. Usa ""Estado (0=PARADO, 1=EN_VUELO, 2=ESTRELLADO): "" para la impresión","printf(""Estado (0=PARADO, 1=EN_VUELO, 2=ESTRELLADO): %d"", estado);"
"Usa el operador ternario para imprimir ""En servicio"" si dronActivo es verdadero, si no imprime ""Fuera de servicio"".","printf(""%s"", dronActivo ? ""En servicio"" : ""Fuera de servicio"");"
"Incrementa la variable idDron en 1 usando el operador de incremento al finalizar la carrera.","idDron++;"
"Resta 10.5 a la bateríaInicial usando operador compuesto.","bateriaInicial -= 10.5;"
"Calcula si la batería es suficiente usando un operador relacional y guarda el resultado en bool suficiente. Diremos que la bateria es suficiente si tiene almenos un 20%","bool suficiente = bateriaInicial >= 20.0;"
"Imprime ""Apto para siguiente ronda"" si suficiente es verdadero, si no imprime ""No apto"", usando ternario.","printf(""%s"", suficiente ? ""Apto para siguiente ronda"" : ""No apto"");"
"Convierte bateriaInicial a int y guárdalo en bateriaEntera.","int bateriaEntera = (int)bateriaInicial;"
"Convierte bateriaEntera otra vez a decimal y guárdalo en nuevaBateria.", "float nuevaBateria = (float)bateriaEntera;"