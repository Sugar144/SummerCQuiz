1,"Usando la directiva define, declara una constante para el máximo de un nombre ""MAX_NOMBRE"" con el valor entero 20","#define MAX_NOMBRE 20"
1,"Declara una constante local de tipo decimal para la distancia mínima ""DISTANCIA_MINIMA"", asignale el valor 250.0","const float DISTANCIA_MINIMA = 250.0;"
1,"Declara una cadena de caracteres llamada nombreDron con tamaño 20.","char nombreDron[20];"
1,"Declara una cadena de caracteres llamada nombreDron con tamaño 20, pero esta vez utiliza la constante ""MAX_NOMBRE"".","char nombreDron[MAX_NOMBRE];"
1,"Declara una variable llamada distanciaMinima e inicializala con la constante ""DISTANCIA_MINIMA""","float distanciaMinima = DISTANCIA_MINIMA;"
1,"Declara una variable entera para almacenar el identificador del dron, llamala idDron.","int idDron;"
1,"Inicializa la variable idDron en -1.","idDron = -1;"
1,"Declara una variable decimal para la batería inicial del dron, llamala bateriaInicial.","float bateriaInicial;"
1,"Declara una variable booleana llamada dronActivo e inicialízala a true.","bool dronActivo = true;"
1,"Declara e inicializa una variable char llamada categoriaDron a ""A"".","char categoriaDron = 'A';"
1,"Lee el nombre del dron desde teclado usando scanf y guardalo en nombreDron.","scanf(""%s"", nombreDron);"
1,"Lee el identificador del dron desde teclado usando scanf y guardalo en idDron.","scanf(""%d"", &idDron);"
1,"Lee el valor de la batería inicial desde teclado usando scanf y guárdalo en bateriaInicial.","scanf(""%f"", &bateriaInicial);"
1,"Lee un carácter del usuario desde teclado usando scanf y guárdalo en categoriaDron.","scanf("" %c"", &categoriaDron);"
1,"Imprime el nombre del dron y su identificador. Usa ""Dron: x, ID: x"" para la impresión, siendo ""x"" el especificador de formato","printf(""Dron: %s, ID: %d"", nombreDron, idDron);"
1,"Imprime la batería inicial del dron con un decimal. Usa ""Batería: x"" para la impresión, siendo ""x"" el especificador de formato","printf(""Batería: %.1f"", bateriaInicial);"
1,"Imprime la categoría del dron como carácter. Usa ""Categoría: x"" para la impresión, siendo ""x"" el especificador de formato","printf(""Categoría: %c"", categoriaDron);"
1,"Declara un enumerado tDronEstado con los valores PARADO, EN_VUELO y ESTRELLADO.","typedef enum { PARADO, EN_VUELO, ESTRELLADO } tDronEstado;"
1,"Declara una variable tDronEstado llamada estado e inicialízala a EN_VUELO.","tDronEstado estado = EN_VUELO;"
1,"Lee el valor del estado del dron desde teclado usando scanf y guárdalo en estado.","scanf(""%u"", &estado);"
1,"Imprime el valor numérico del estado del dron con una explicación. Usa ""Estado (0=PARADO, 1=EN_VUELO, 2=ESTRELLADO): x"" para la impresión, siendo ""x"" el especificador de formato","printf(""Estado (0=PARADO, 1=EN_VUELO, 2=ESTRELLADO): %d"", estado);"
1,"Usa el operador ternario para imprimir ""En servicio"" si dronActivo es verdadero, si no imprime ""Fuera de servicio"".","printf(""%s"", dronActivo ? ""En servicio"" : ""Fuera de servicio"");"
1,"Incrementa la variable idDron en 1 usando el operador de incremento al finalizar la carrera.","idDron++;"
1,"Resta 10.5 a la bateríaInicial usando operador compuesto.","bateriaInicial -= 10.5;"
1,"Calcula si la batería es suficiente usando un operador relacional y guarda el resultado en en una variable booleana ""suficiente"". Diremos que la bateria es suficiente si tiene almenos un 20%","bool suficiente = bateriaInicial >= 20.0;"
1,"Imprime ""Apto para siguiente ronda"" si suficiente es verdadero, si no imprime ""No apto"", usando ternario.","printf(""%s"", suficiente ? ""Apto para siguiente ronda"" : ""No apto"");"
1,"Convierte bateriaInicial a entero y guárdalo en bateriaEntera.","int bateriaEntera = (int)bateriaInicial;"
1,"Convierte bateriaEntera otra vez a decimal y guárdalo en nuevaBateria.", "float nuevaBateria = (float)bateriaEntera;"
2,"Declara un array de enteros llamado intArray de maximo 20 elementos", "int intArray[20];"
3,"Declara un entero llamado numero y asignale el valor 5, luego haciendo uso de la estructura if, si el numero es 5 sumale 1 utilizando operador de incremento. En caso contrario restale 1 utilizando operador de decremento", "int numero = 5; if(numero == 5) { numero++;} else { numero--; }"